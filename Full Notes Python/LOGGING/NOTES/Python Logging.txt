				=================================================
						Python Logging 
				=================================================
=>Python Logging is a concept allows the Programmers to Track or Record the Events while Program is running in the file and File is called Log File
---------------------------------------------------------
=>To Implement python logging, we have a pre-defined module called 'logging'.
=>To write the Message to log file, we have logging levels. They are

		1. CRITICAL--------------------50
		2. ERROR-----------------------40
		3. WARNING--------------------30  (default)
		4. INFO---------------------------20
		5. DEBUG------------------------10
		6. NOTSET-----------------------0
The above Data Members OR Global Var in logging module------We must access w.r.t Module Name
=>logging.CRITICAL , logging.ERROR,...........................etc
----------------------------------------------------------------------------------------------------------------------------------------------------------------
					What is Logging in Programming?
----------------------------------------------------------------------------------------------------------------------------------------------------------------
=>Logging in programming refers to the recording of data related to the execution of the program. This data can include errors, informational messages, and warnings, which can be stored in files, sent over the network, or managed in other ways. Logging helps in debugging, monitoring software behavior, and analyzing performance.
----------------------------------------------------------------------------------------------------------------------------------------------------------------
		How to Implement Python Logging
----------------------------------------------------------------------------------------------------------------------------------------------------------------
=>import logging module
=>Open the log file and other attrubutes used for logging Process, like logging level, time stamp...etc
=>basicConfig() present in logging module
		logging.basicConfig(filename="Log File Name",
						     level="Logging level",
						     filemode="File mode",														format="Formatting Messges",
						     datefmt="date related information")

=>Write the Logging Message to the log file by using the functions in logging module

			logging.critical("Critical Messages")
			logging.error("Error Message")
			logging.warning("Warning Messages")
			logging.info("Information message")
			logging.debug("Debuging Message")
----------------------------------------------------------------------------------------------------------------------------------------------------------------
# Write a Python Program for Create a Log File and write Some messages to log file
		import logging
		loggig.basicConfig(filename="nit.info",level=logging.ERROR)
		print("Logging Concept is going on")
		logging.critical("Critical Messages")
		logging.error("Error Message")
		logging.warning("Warning Message")
		logging.info("Information message")
		logging.debug("Debuging Message")		
--------------------------------------------------------------------------------------------
logging.basicConfig( filename="Log File Name",
				     level="Logging level", 
				     filemode="File mode",	format="Formatting Messges",
				     datefmt="date related information")
---------------------------------------------------------------------------------------------------------------------------------------------------------
import logging
def divop(a,b):
	if(b==0):
		logging.basicConfig(filename="C:\\HYD\\AMPT\\divop.data",level="ERROR",format='%(asctime)s  : %(levelname)s: %(message)s',datefmt='%d-%m-%Y  %I:%M:%S %p ')
		logging.error("Don't Enter Zero For Deno...take Care")
		print("Data written to log file")
	else:
		logging.critical("Done Well")
		logging.error("Result="+str(a/b))
		print("Div={}".format(a/b))

#Main Program
print("Program exectuion started")
a=float(input("Enter Value of a:"))
b=float(input("Enter Value of b:"))
divop(a,b)
print("Program exectuion completed")