				=====================================================
							Copy Techniques in Python
				=====================================================
=>In Python Programming, We have Two Types of Copy Techniques. They are

			1. Shallow Copy
			2. Deep Copy
-----------------------------------------------------------------------------------------------------------------------------------------------------------
1. Shallow Copy
-----------------------------------------------------------------------------------------------------------------------------------------------------------
=>The Properties of Shallow Copy are 
				i. The Initial Content of Both the Objects are Same.
				ii. The Memory Address of Both the Objects are Different 
				iii. The Modifications are Independent.
			(Whatever the Changes we do on One Object, those changes will not reflect to another object)
=>To Implement Shallow Copy, we use copy().
=>Syntax:    listobj2=listobj1.copy()
------------------------
Examples
------------------------
>>> lst1=[10,"RS"]
>>> print(lst1,type(lst1),id(lst1))-----------------[10, 'RS'] <class 'list'> 2331967487040
>>> lst2=lst1.copy() # Shallow Copy
>>> print(lst2,type(lst2),id(lst2))----------------[10, 'RS'] <class 'list'> 2331967454272
>>> lst1.append("Python")
>>> lst2.insert(1,"GUIDO")
>>> print(lst1,type(lst1),id(lst1))----------------[10, 'RS', 'Python'] <class 'list'> 2331967487040
>>> print(lst2,type(lst2),id(lst2))----------------[10, 'GUIDO', 'RS'] <class 'list'> 2331967454272
-----------------------------------------------------------------------------------------------------------------------------------------------------------
2. Deep Copy
-----------------------------------------------------------------------------------------------------------------------------------------------------------
=>The Properties of Deep Copy are 
				i. The Initial Content of Both the Objects are Same.
				ii. The Memory Address of Both the Objects are Same
				iii. The Modifications are Dependent.
			(Whatever the Changes we do on One Object, those changes will reflect to another object)
=>To Implement Deep Copy, we use Assigment Operator(=) only.
Syntax:    listobj2=listobj1
--------------------------------------
Examples
--------------------------------------
>>> lst1=[10,"RS"]
>>> print(lst1,type(lst1),id(lst1))--------------[10, 'RS'] <class 'list'> 2331967480640
>>> lst2=lst1 # Deep Copy
>>> print(lst2,type(lst2),id(lst2))--------------[10, 'RS'] <class 'list'> 2331967480640
>>> lst1.append("NL")
>>> print(lst1,type(lst1),id(lst1))--------------[10, 'RS', 'NL'] <class 'list'> 2331967480640
>>> print(lst2,type(lst2),id(lst2))---------------[10, 'RS', 'NL'] <class 'list'> 2331967480640
>>> lst2.insert(1,"GUIDO")
>>> print(lst1,type(lst1),id(lst1))---------------[10, 'GUIDO', 'RS', 'NL'] <class 'list'> 2331967480640
>>> print(lst2,type(lst2),id(lst2))----------------[10, 'GUIDO', 'RS', 'NL'] <class 'list'> 2331967480640
-----------------------------------------------------------------------------------------------------------------------------------------------------------
