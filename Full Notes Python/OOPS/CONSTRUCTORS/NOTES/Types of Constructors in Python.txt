			=============================================
					Types of Constructors in Python
			=============================================
=>In Python Programming, we have  two types of Constructors. they are
			1. Default or Parameter Less Constructor
			2. Parameterized Constructor
-----------------------------------------------------------------------------------------------------------------------------------------
1. Default or Parameter Less Constructor-----------self.__dict__ give all vales in dict format
-----------------------------------------------------------------------------------------------------------------------------------------
=>A  Default or Parameter Less Constructor is one, which never takes any Formal Parameters except self.
=>The purpose of  Default or Parameter Less Constructor is that " To Initlize Multiple objects of same class with Same Values".
=>Syntax:    def   __init__(self):
                          ---------------------------
			  Block of statements---Performs Initlization Process
			  ---------------------------
Example:
#program for demonstrating Default Constructor
#DefaultConstEx1.py
class Test:
	def __init__(self):
		print("i am from default constructor:")
		self.a=10
		self.b=20
		print("\ta={}\tb={}".format(self.a,self.b))

#main program
t1=Test()# Object creation calls default constructor
t2=Test()# Object creation calls default constructor
t3=Test()# Object creation calls default constructor
-----------------------------------------------------------------------------------------------------------------------------------------
2. Parameterized Constructor
-----------------------------------------------------------------------------------------------------------------------------------------
=>A   Parameterized Constructor is one, which always takes Formal Parameters after self.
=>The purpose of   Parameterized Constructor is that " To Initlize Multiple objects of same 
    class with Different Values".
=>Syntax:    def   __init__(self,list of formal params):
                          ---------------------------
			  Block of statements-----Performs Initlization Process
			  ---------------------------
Examples:
-----------------
#program for demonstrating Parametrized Constructor
#ParamConstEx1.py
class Test:
	def __init__(self,k,v):
		print("i am from Parametrized constructor:")
		self.a=k
		self.b=v
		print("\ta={}\tb={}".format(self.a,self.b))

#main program
t1=Test(10,20)# Object creation calls Parametrized Constructor
t2=Test(100,200)# Object creation calls Parametrized Constructor
t3=Test(1000,2000)# Object creation calls Parametrized Constructor
-----------------------------------------------------------------------------------------------------------------------------------------
Most Imp Point:
-----------------------------
Note: In Class of Python, we can't define both default and Parameterized constructors bcoz PVM can remember only latest 
constructor (due to its interpretation Process).To full fill the need of both default and parameterized constructors , 
we define single constructor with default parameter mechanism.

#program for demonstrating Parametrized and DefaultConstructor
#ParamDefualtConstEx1.py
class Test:
	def __init__(self,k=1,v=2): # default and parameterized
		print("i am from default / Parametrized constructor:")
		self.a=k
		self.b=v
		print("\ta={}\tb={}".format(self.a,self.b))

#main program
t1=Test()# Object creation calls default Constructor
t2=Test(10,20)# Object creation calls Parametrized Constructor
=======================================================================================