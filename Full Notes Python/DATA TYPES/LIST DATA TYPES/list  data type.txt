				================================================
							1. list
				================================================
Index
--------------------------------
=>What is list
=>Purpose of list
=>Notations of list
=>Memory Mgmt of list
=>Types of list objects
=>Pre-Defined Functions in list
=>Programming Examples
=>Nested OR Inner List
=>Pre-Defined Functions in Inner list
=>Programming Examples
---------------------------------------------------------------------------------------------------------------------------------------------------------
Properties of list
---------------------------------------------------------------------------------------------------------------------------------------------------------
=>Here 'list' is one of the Pre-Defined Class and treated as List Category Data Type.
=>The purpose of list data type is that "To store Multiple Values either of Same Type or Different Type OR 
    Both the Types in single Object with Unique and Duplicate".
=>To store the Elements in list, we use Square Brackets [] and Values Separated by comma.
			Varname=[Val1,Val2,......,Val-n]
=>An object of list maintains Insertion order.
=>On the Object of list, we can Perform Both Indexing and Slicing.
=>An Object of List belongs to MUTABLE bcoz list object allows us to perform Item Assignment (Changes)
=>we can create Two Types of List Objects. They are
				1. Enpty List
				2. Non-Empty List
------------------------------------
1. Empty List
------------------------------------
=>An Empty List is one, which does not contain any Elements and whose length is 0
=>Syntax:    varname= [ ]
			OR
		    varname=list()
------------------------------------
2. Non-Empty List
------------------------------------
=>A Non-Empty List is one, which contains  Elements and whose length is >0
=>Syntax:	listobj=[Val1,Val2,......,Val-n]
					OR
			listobj=list(Object)   # Here Object Belongs to ITERABLE Object
					OR
			listobj=list([Object])   # Here Object Belongs to ITERABLE  and NON-ITERABLE Object
---------------------------------------------------------------------------------------------------------------------------------------------------------
Examples
---------------------------------------------------------------------------------------------------------------------------------------------------------
>>> lst1=[10,-20,13,56,10,20,30,-4.5]
>>> print(lst1,type(lst1))-------------------[10, -20, 13, 56, 10, 20, 30, -4.5] <class 'list'>
>>> lst2=[100,"Rossum",45.67,"Python",True,2+3j]
>>> print(lst2,type(lst2))-------------------[100, 'Rossum', 45.67, 'Python', True, (2+3j)] <class 'list'>
---------------------------------
>>> lst2=[100,"Rossum",45.67,"Python",True,2+3j]
>>> print(lst2,type(lst2),id(lst2))----[100, 'Rossum', 45.67, 'Python', True, (2+3j)] <class 'list'> 1669680328704
>>> lst2[0]---------------------------------100
>>> lst2[-1]--------------------------------(2+3j)
----------------------------------
>>> lst2=[100,"Rossum",45.67,"Python",True,2+3j]
>>> print(lst2,type(lst2),id(lst2))------------[100, 'Rossum', 45.67, 'Python', True, (2+3j)] <class 'list'> 1669680328704
>>> lst2[0]-----------------------------------------100
>>> lst2[-1]----------------------------------------(2+3j)
>>> lst2[0:3]---------------------------------------[100, 'Rossum', 45.67]
-------------------------------------
>>> lst2=[100,"Rossum",45.67,"Python",True,2+3j]
>>> print(lst2,type(lst2),id(lst2))-----------[100, 'Rossum', 45.67, 'Python', True, (2+3j)] <class 'list'> 1669678943872
>>> lst2[1]----------------------------------------'Rossum'
>>> lst2[1]="RS"  # Indexed Based Modification
>>> print(lst2,type(lst2),id(lst2))--------[100, 'RS', 45.67, 'Python', True, (2+3j)] <class 'list'> 1669678943872
>>> lst2[-2:]=[False,2.5+4.5j] # Slice Based Modification
>>> print(lst2,type(lst2),id(lst2))-------[100, 'RS', 45.67, 'Python', False, (2.5+4.5j)] <class 'list'> 1669678943872
--------------------------------------
>>> lst1=[]
>>> print(lst1,type(lst1))-----------------[] <class 'list'>
>>> len(lst1)---------------------------------0
		OR
>>> lst2=list()
>>> print(lst2,type(lst2))-----------------[] <class 'list'>
>>> len(lst2)---------------------------------0
>>> lst1=[10,"RS",34.56]
>>> print(lst1,type(lst1))----------------[10, 'RS', 34.56] <class 'list'>
>>> len(lst1)-------------------------------3
--------------------------------------------------------
>>> s="PYTHON"
>>> print(s,type(s))----------------------PYTHON <class 'str'>
>>> lst=list(s)
>>> print(lst,type(lst))------------------['P', 'Y', 'T', 'H', 'O', 'N'] <class 'list'>
>>> r=range(10,21,2)
>>> print(r,type(r))-----------------------range(10, 21, 2) <class 'range'>
>>> lst=list(r)
>>> print(lst,type(lst))------------------[10, 12, 14, 16, 18, 20] <class 'list'>
------------------------------------------------
>>> a=10
>>> print(a,type(a))------------------------10 <class 'int'>
>>> lst=list(a)-------------------------------TypeError: 'int' object is not iterable
>>> lst=list([a])
>>> print(lst,type(lst))---------------------[10] <class 'list'>
--------------------------------------------------
>>> s="PYTHON"
>>> lst1=list([s])
>>> print(lst1,type(lst1))-----------------['PYTHON'] <class 'list'>
------------------------------------------------------------
>>> a=2+3j
>>> print(a,type(a))---------------------------(2+3j) <class 'complex'>
>>> lst=list(a)----------------------------------TypeError: 'complex' object is not iterable
>>> lst=list([a])
>>> print(lst,type(lst))-----------------------[(2+3j)] <class 'list'>
=========================================x==========================================