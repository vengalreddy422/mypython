				==================================================
						Operations on str data
				==================================================
=>On Str Data, We perform Two Types of Operations. They are

				1. Indexing Operation
				2. Slicing Operation
----------------------------------------------------------------------------------------------------------------------------------------------------------------
1. Indexing Operation
----------------------------------------------------------------------------------------------------------------------------------------------------------------
=>The Process of Obtaining Single Value from Given Str Object is called Indexing
=>In Otherwords, The Purpose of Operation is that "To Get Single Value from given Str Object".
=>Syntax:     strobj [ Index ]
=>Here strobj is an object of <class, str>
=>Index Represents either +Ve Index OR -Ve Index.
=>If we enter valid Index then PVM gives Corresponding Indexed Value.
=>If we enter Invalid Index then PVM gives IndexError.
-----------------------------
Examples
-----------------------------
>>> s="PYTHON"
>>> print(s,type(s))-----------------------PYTHON <class 'str'>
>>> s[0]--------------------------------------'P'
>>> s[2]--------------------------------------'T'
>>> s[4]---------------------------------------'O'
>>> s[5]--------------------------------------'N'
>>> s[3]--------------------------------------'H'
>>> s[1]--------------------------------------'Y'
----------------------
>>> s="PYTHON"
>>> print(s,type(s))------------------PYTHON <class 'str'>
>>> s[-6]--------------------------------'P'
>>> s[-1]---------------------------------'N'
>>> s[-2]----------------------------------'O'
>>> s[-5]----------------------------------'Y'
>>> s[-3]-----------------------------------'H'
>>> s[-4]-----------------------------------'T'
--------------------------------------
>>> s="PYTHON"
>>> print(s,type(s))------------------------PYTHON <class 'str'>
>>> s[10]-------------------------------------IndexError: string index out of range
>>> s[-9]-------------------------------------IndexError: string index out of range
-----------------------------------
>>> s="PYTHON"
>>> print(s,type(s))--------------------PYTHON <class 'str'>
>>> s[len(s)-1]--------------------------'N'
>>> s[-len(s)]----------------------------'P'
>>> s[1.2]---------------------------------TypeError: string indices must be integers, not 'float'
>>> s[0b100]-----------------------------'O'
>>> s[True]-------------------------------'Y'
>>> s[False]-----------------------------'P'
>>> s[-True]-----------------------------'N'
------------------------------
>>> "HYDERABAD"[-1]------------------------------'D'
>>> "HYDERABAD"[len("PYTHON")]------------'B'
>>> "HYDERABAD"[-len("PYTHON")]------------'E'
----------------------------------------------------------------------------------------------------------------------------------------------------------------
2. Slicing Operation
----------------------------------------------------------------------------------------------------------------------------------------------------------------
=>The Process of Obtaining Group of Sequence of  Values from Given Str Object is called Slicing.
=>In Other words, The the purpose of Slicing Operation is that "To get Group of Sequence of  Values from Given Str Object "
=>The Slicing Operation can be Performed by using 5 Syntaxes. They are
***************************************************************************************************************************
Syntax-1:   strobj[BEGIN:END]
***************************************************************************************************************************
=>This Syntax generates range of Chars/Values OR Sub String from BEGIN Index to END-1 Index Provided BEGIN < END Index otherwise we get Space OR ' ' as Result.
--------------------------------------------
Examples1:  +VE Begin : +VE END provided BEGIN < END Index otherwise we get Space OR ' ' as Result.
--------------------------------------------
>>> s="PYTHON"
>>> print(s,type(s))---------------------PYTHON <class 'str'>
>>> s[0:4]---------------------------------'PYTH'
>>> s[2:6]---------------------------------'THON'
>>> s[1:5]----------------------------------'YTHO'
>>> s[2:5]----------------------------------'THO'
>>> s[0:3]----------------------------------'PYT'
>>> s[4:1]----------------------------------'  '
		OR
>>> print(s[4:1])--------------------------Space
>>> s[0b100:0b101]---------------------'O'
>>> s[False:0b101]----------------------'PYTHO'
-------------------------------------------------
Examples2:  -VE Begin : -VE  END  provided BEGIN < END Index otherwise we get Space OR ' ' as Result.
-------------------------------------------------
>>> s="PYTHON"
>>> print(s,type(s))----------------------------PYTHON <class 'str'>
>>> s[-6:-1]--------------------------------------'PYTHO'
>>> s[-5:-2]--------------------------------------'YTH'
>>> s[-3:-1]---------------------------------------'HO'
>>> s[-4:-6]---------------------------------------''
>>> s[-5:-3]--------------------------------------'YT'
>>> s[-6:-4]--------------------------------------'PY'
>>> s[-0x6:-0x1]-------------------------------'PYTHO'
---------------------------------------------------
Examples3:  +VE Begin : - VE  END  -------->BEGIN < END Not considered.
---------------------------------------------------
>>> print(s,type(s))----------------------PYTHON <class 'str'>
>>> s[0:-1]----------------------------------'PYTHO'
>>> s[4:-1]----------------------------------'O'
>>> s[1:-2]---------------------------------'YTH'
>>> s[2:-3]---------------------------------'T'
>>> s[1:-3]---------------------------------'YT'
>>> s[0:-3]---------------------------------'PYT'
>>> s[3:-3]----------------------------------' '
>>> s[4:-3]----------------------------------' '
>>> s[0b100:-0b101]---------------------' '
-------------------------------------------------------
Examples1:  -VE Begin : + VE END-------->BEGIN < END Not considered.
------------------------------------------------------
>>> s="PYTHON"
>>> print(s,type(s))---------------------------PYTHON <class 'str'>
>>> s[-5:3]--------------------------------------'YT'
>>> s[-6:6]---------------------------------------'PYTHON'
>>> s[-5:3]---------------------------------------'YT'
>>> s[-6:3]---------------------------------------'PYT'
>>> s[-5:2]--------------------------------------'Y'
>>> s[-4:2]--------------------------------------' '
>>> s[-0b101:0x5]----------------------------'YTHO'
>>> s[-len("HYD"):len("PYTHON")]-------'HON'
>>> s[-0o5:0o5]---------------------------------'YTHO'
----------------------------------------------
Most Special Points
----------------------------------------------
>>> s="PYTHON"
>>> print(s,type(s))------------------------PYTHON <class 'str'>
>>> s[0:100]--------------------------------'PYTHON'
>>> s[2:200]-------------------------------'THON'
>>> s[3:1000]------------------------------'HON'
>>> s[6:100]--------------------------------''
------------------------
>>> s="PYTHON"
>>> print(s,type(s))-----------------------PYTHON <class 'str'>
>>> s[-100:-5]------------------------------'P'
>>> s[-1000:-1]----------------------------'PYTHO'
>>> s[-20:-4]-------------------------------'PY'
>>> s[-20:-6]-------------------------------''
------------------------------------------------
>>> s="PYTHON"
>>> print(s,type(s))--------------------PYTHON <class 'str'>
>>> s[-100:100]------------------------'PYTHON'
>>> s[3:-100]----------------------------' '
>>> s[-100:0]---------------------------' '
----------------------------------------------
***************************************************************************************************************************
Syntax-2:   strobj[ BEGIN: ]
***************************************************************************************************************************
=>In This Syntax, We are specifying Begin Index and Not Specifying End Index.
=>If we don't specify END Index then PVM the range of Values from BEGIN Index to Last Character.
--------------------------
Examples
--------------------------
>>> s="PYTHON"
>>> print(s,type(s))---------------------------PYTHON <class 'str'>
>>> s[0:]-----------------------------------------'PYTHON'
>>> s[2:]-----------------------------------------'THON'
>>> s[1:]-----------------------------------------'YTHON'
>>> s[4:]-----------------------------------------'ON'
>>> s[3:]------------------------------------------'HON'
>>> s[5:]-----------------------------------------'N'
>>> s[10:]----------------------------------------''
-------------------------------------------
>>> s="PYTHON"
>>> print(s,type(s))-------------------------PYTHON <class 'str'>
>>> s[-6:]--------------------------------------'PYTHON'
>>> s[-4:]--------------------------------------'THON'
>>> s[-3:]--------------------------------------'HON'
>>> s[-5:]--------------------------------------'YTHON'
>>> s[-2:]--------------------------------------'ON'
>>> s[-1:]---------------------------------------'N'
>>> s[-100:]------------------------------------'PYTHON'
>>> "OYO"[1:]--------------------------------'YO'
>>> "OYO"[0:]--------------------------------'OYO'
>>> "OYO"[-3:]-------------------------------'OYO'
***************************************************************************************************************************
Syntax-3:   strobj[ :END]
***************************************************************************************************************************
=>In This Syntax, We are Not Specifying Begin Index and  Specifying End Index.
=>If we don't specify BEGIN Index then PVM the range of Values from First Character to END-1 Index.
-------------------------
Examples
-------------------------
>>> s="PYTHON"
>>> print(s,type(s))-----------------------PYTHON <class 'str'>
>>> s[:3]-------------------------------------'PYT'
>>> s[:6]-------------------------------------'PYTHON'
>>> s[:4]-------------------------------------'PYTH'
>>> s[:2]-------------------------------------'PY'
>>> s[:5]-------------------------------------'PYTHO'
>>> s[:1]-------------------------------------'P'
>>> s[:1000]--------------------------------'PYTHON'
----------------------------------
>>> s="PYTHON"
>>> print(s,type(s))-------------------------PYTHON <class 'str'>
>>> s[:-1]--------------------------------------'PYTHO'
>>> s[:-4]--------------------------------------'PY'
>>> s[:-2]-------------------------------------'PYTH'
>>> s[:-5]--------------------------------------'P'
>>> s[:-3]-------------------------------------'PYT'
>>> s[:-0]-------------------------------------''
>>> s[:0]--------------------------------------''
>>> s[:-10]-----------------------------------''
>>> s[:-6]-------------------------------------''
***************************************************************************************************************************
Syntax-4:   strobj[ : ]
***************************************************************************************************************************
=>In This Syntax, We are Not Specifying Both Begin and End Indices.
=>This gives range of values from First Charracter to Last Character ( Complete content of str obj)
-----------------------------
Examples
-----------------------------
>>> s="PYTHON"
>>> print(s,type(s))-----------------PYTHON <class 'str'>
>>> s[:]--------------------------------'PYTHON'
>>> "HYDERABAD"[:]-------------'HYDERABAD'
-----------------------------
>>> s="PYTHON"
>>> print(s)-----------------------PYTHON
>>> s[0:6]-------------------------'PYTHON'
>>> s[0:100]----------------------'PYTHON'
>>> s[-100:100]------------------'PYTHON'
>>> s[:100]------------------------'PYTHON'
>>> s[-6:]--------------------------'PYTHON'
>>> s[:]-----------------------------'PYTHON'
NOTE:All the above Syntaxes Obtains range of values in FORWARD Direction with Step +1 Only
***************************************************************************************************************************
Syntax-5:   strobj[BEGIN:END:STEP]
***************************************************************************************************************************
Rule-1:   Here the Values of BEGIN,END and STEP can be either +VE or -VE or Combination also.

Rule-2:  If the STEP is +VE then PVM takes Range of Chars from BEGIN Index to END-1 Index in FORWARD DIRECTION 
             Provided BEGIN<END otherwise we get ' ' OR Space as Result

Rule-3:  If the STEP is -VE then PVM takes Range of Chars from BEGIN to END+1 Index in BACKWARD DIRECTION 
             provided BEGIN > END Otherwise we get ' ' OR Space as Result.

Rule-4: If we write END Index as 0 then We get Space OR '  ' as Result at the time Extarcting the Data in FORWARD 
             DIRECTION

Rule-5:  If we write END Index as -1 then We get Space OR '  ' as Result at the time Extarcting the Data in BACKWARD 
             DIRECTION
*************************************************************************************************************************
Examples-1: +VE BEG    +VE END     +VE STEP
-------------------
>>> s="PYTHON"
>>> print(s)------------PYTHON
>>> s[0:6:1]------------'PYTHON'
>>> s[0:6:2]------------'PTO'
>>> s[0:6:3]-----------'PH'
>>> s[6:0:2]-----------''
>>> s[2:6:2]-----------'TO'
>>> s[1:6:3]-----------'YO'
>>> s[2:5:2]-----------'TO'
------------------------
Examples-1: -VE BEG    -VE END     +VE STEP
-------------------
>>> s="PYTHON"
>>> print(s)-------------------PYTHON
>>> s[-6:-1:3]-----------------'PH'
>>> s[-5:-1:2]-----------------'YH'
>>> s[-5:-2:3]----------------'Y'
>>> s[-6:-1:2]-----------------'PTO'
>>> s[-4:-1:1]-----------------'THO'
---------------------------------------------------------------------
Examples:   +VE BEG     -VE END		+VE  STEP
---------------------------------------------------------------------
>>> s="PYTHON"
>>> print(s)----------------------PYTHON
>>> s[0:-1:1]--------------------'PYTHO'
>>> s[2:-2:2]--------------------'T'
>>> s[3:-1:2]---------------------'H'
>>> s[2:-1:3]---------------------'T'
---------------------------------------------------------------------
 Examples:  -VE BEG       +VE END	+VE STEP
---------------------------------------------------------------------
>>> s="PYTHON"
>>> print(s)--------------------------PYTHON
>>> s[-6:6:2]-------------------------'PTO'
>>> s[-5:6:3]------------------------'YO'
>>> s[-5:5:4]------------------------'Y'
>>> s[-6:5:3]-------------------------'PH'
>>> s[-100:100:3]------------------'PH'
********************************************************************
Examples-1: +VE BEG    +VE END    -VE STEP
----------------------------------------------------------------------------
>>> s="PYTHON"
>>> print(s)-------------------------PYTHON
>>> s[1:6:-1]-----------------------' '
>>> s="PYTHON"
>>> print(s)-----------------------PYTHON
>>> s[1:6:-1]---------------------''
>>> s[5:1:-1]--------------------'NOHT'
>>> s[5:1:-2]--------------------'NH'
>>> s[5:0:-2]---------------------'NHY'
>>> s[5:1:-3]---------------------'NT'
>>> s="PYTHON"
>>> print(s)----------------------PYTHON
>>> s[::]--------------------------'PYTHON'
>>> s[::1]-------------------------'PYTHON'
>>> s[::-1]------------------------'NOHTYP'
>>> s[::-2]------------------------'NHY'
----------------------------------------------------------------------
********************************************************************
Examples-1: -VE BEG    -VE END    -VE STEP
----------------------------------------------------------------------------
>>> s="PYTHON"
>>> print(s)-----------------------------PYTHON
>>> s[-6:-1:-2]-------------------------''
>>> s[-1:-6:-2]-------------------------'NHY'
>>> s[-2:-6:-3]-------------------------'OY'
>>> s[-1:-5:-2]-------------------------'NH'
>>> s[-2:-6:-3]-------------------------'OY'
********************************************************************
Examples-1: +VE BEG    -VE END    -VE STEP
----------------------------------------------------------------------------
>>> s="PYTHON"
>>> print(s)---------------------------PYTHON
>>> s[2:-1:-2]------------------------' '
>>> s[2:-6:-2]------------------------'T'
>>> s[2:-6:-1]------------------------'TY'
>>> s[5:-6:-2]------------------------'NHY'
>>> s[4:-6:-1]------------------------'OHTY'
>>> s[100:-100:-1]-----------------'NOHTYP'
********************************************************************
Examples-1: -VE BEG    +VE END    -VE STEP
----------------------------------------------------------------------------
>>> s="PYTHON"
>>> print(s)-------------------------PYTHON
>>> s[-6:6:-1]----------------------''
>>> s[-1:0:-1]----------------------'NOHTY'
>>> s[-2:2:-2]----------------------'O'
>>> s[-1:1:-2]----------------------'NH'
>>> s[-1:2:-3]----------------------'N'
---------------------------------------------------------------------
Rule-4--Examples
---------------------------------------------------------------------
>>> s="PYTHON"
>>> s[1:0:1]----------------------------''
>>> s[1:0:2]---------------------------''
>>> s[1:0:3]---------------------------''
>>> s[1:0:4]---------------------------''
---------------------------------------------------------------------
Rule-5--Examples
---------------------------------------------------------------------
>>> s="PYTHON"
>>> print(s)-------------------------PYTHON
>>> s[-1:-1:-1]----------------------''
>>> s[-6:-1:-1]----------------------''
>>> s[-5:-1:-2]----------------------''
>>> s[-5:-1:-3]----------------------''
---------------------------------------------------------------------------------------------------------------------------------------------------------------
MISC Examples
---------------------------------------------------------------------------------------------------------------------------------------------------------------
>>> s="LIRIL"
>>> s[::-1]-----------------------------------------'LIRIL'
>>> s==s[::-1]
True
>>> "PYTHON"=="PYTHON"[::-1]
False
>>> "MADAM"=="MADAM"[::-1]
True
>>> "MALAYALAM"=="MALAYALAM"[::-1]
True
>>> "JAVA"=="JAVA"[::-1]
False
>>> "WOW"[::]=="WOW"[::-1]
True
>>>
---------------------------------------------------
>>> s="PYTHON"
>>> s[2::2]
'TO'
>>> s[1::3]
'YO'
>>> s[:6:2]
'PTO'
>>> s[:6:2][::-1]
'OTP'
>>> s[:100:2]
'PTO'
>>> s[-3::-1]
'HTYP'
---------------------------------------------------------------------
>>> s="PYTHON"
>>> print(s )---------------------------------PYTHON
>>> s[-5::-2]---------------------------------'Y'
>>> s[:-5:-2]---------------------------------'NH'
>>> s[:-6:-3]---------------------------------'NT'
>>> s[-1::-2]---------------------------------'NHY'
>>> s[-2::-2]---------------------------------'OTP'
>>> s[-2::-2][::-1]--------------------------'PTO'
---------------------------------------------------------------------------------------------------------------------------------------------------------------


