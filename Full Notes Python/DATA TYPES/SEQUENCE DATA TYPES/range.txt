				====================================================
							4. range
				====================================================
=>Here 'range' is one of the Pre-Defined Class and Treated Sequence Category Data Type.
=>The purpose of range data type is that "To Store Sequence of Numerical Integer Values by maintaining equal Interval 
   of step either in Forward OR Backward Direction".
=>An object of range maintains Insertion Order
=>On the Object of range, we can Perform both Indexing and Slicing
=>An object of range belongs to IMMUTABLE bcoz 'range' object does not support item assignment
=>To Generate OR Store Sequence of Numerical Integer Values by maintaining equal Interval of step either in Forward OR Backward Direction, we have 3 Pre-Defined Functions in range object. They are
				1. range(value)
				2. range(Start,Stop)
				3. range(Start,Stop,Step)
----------------------------------------------------------------------------------------------------------------------------------------------------------
1. range(value)
----------------------------------------------------------------------------------------------------------------------------------------------------------
=>Syntax:   varname=range(Value)
=>This Syntax generates range of Values from 0 to Value-1
------------------
Examples
------------------
>>> r=range(6)
>>> print(r,type(r))------------------range(0, 6) <class 'range'>
>>> for v in r:
...		print(v)
...
		0
		1
		2
		3
		4
		5
>>> r[0]------------------0
>>> r[-1]-----------------5
>>> r[0]=10--------------TypeError: 'range' object does not support item assignment
>>> for v in r[0:4]:
...		print(v)
...
			0
			1
			2
			3
---------------------------------------------------------------------------------------------------------------------------------------------------------
2. range(Start,Stop)
----------------------------------------------------------------------------------------------------------------------------------------------------------
=>Syntax:   varname=range(Start,Stop)
=>This Syntax generates range of Values from Start to Stop-1
--------------------
Examples
--------------------
>>> r=range(15,21)
>>> print(r,type(r))---------------range(15, 21) <class 'range'>
>>> len(r)---------------------------6
>>> for k in r:
...		print(k)
...
		15
		16
		17
		18
		19
		20
>>> r[0]------------------15
>>> r[-1]-----------------20
>>> for k in r[-3:]:
...		print(k)
...
		18
		19
		20
NOTE: The above Two Syntaxes , generates range of values in FORWARD DIRECTION with default step +1 Only
----------------------------------------------------------------------------------------------------------------------------------------------------------
3. range(Start,Stop,Step)
----------------------------------------------------------------------------------------------------------------------------------------------------------
=>Syntax:   varname=range(Start,Stop,Step)
=>This Syntax generates range of Values from Start to Stop-1 with Step either in FORWARD OR BACKWARD 
    Direction
--------------------------
Examples:
--------------------------
>>> r=range(10,21,2)
>>> print(r,type(r))-------------range(10, 21, 2) <class 'range'>
>>> for val in r:
...		print(val)
...
			10
			12
			14
			16
			18
			20
>>> for v in range(10,21,3):
...		print(v)
...
			10
			13
			16
			19

>>> for v in range(5,0,-1):
...		print(v)
...
			5
			4
			3
			2
			1
----------------------------------------------------------------------------------------------------------------------------------------------------------
Multiple Examples
----------------------------------------------------------------------------------------------------------------------------------------------------------
Q1: 0  1   2   3   4  5  6  7  8  9  -----range(10)  OR  range(0,10)  OR range(0,10,1)
>>> for v in range(10):
...		print(v)
...
			0
			1
			2
			3
			4
			5
			6
			7
			8
			9
>>> for v in range(0,10):
...		print(v)
...
			0
			1
			2
			3
			4
			5
			6
			7
			8
			9
>>> for val in range(0,10,1):
...		print(val)
...
			0
			1
			2
			3
			4
			5
			6
			7
			8
			9
----------------------------------------------------------------------------------------------------------------------------------------------------------
Q2: 10  11  12   13   14   15 ---------------range(10,16)  OR range(10,16,1) 

>>> for v in range(10,16,1):
...		print(v)
...
			10
			11
			12
			13
			14
			15
>>> for val in range(10,16):
...		print(val)
...
			10
			11
			12
			13
			14
			15
----------------------------------------------------------------------------------------------------------------------------------------------------------
Q3: 1000  1001   1002   1003   1004   1005--------range(1000,1006,1) OR range(1000,1006)

>>> for k in range(1000,1006):
...		print(k)
...
			1000
			1001
			1002
			1003
			1004
			1005
>>> for k in range(1000,1006,1):
...		print(k)
...
		1000
		1001
		1002
		1003
		1004
		1005
----------------------------------------------------------------------------------------------------------------------------------------------------------
Q4) -1  -2   -3   -4   -5   -6   -7  -8  -9  -10---------range(-1,-11,-1)
>>> for v in range(-1,-11,-1):
...		print(v)
...
			-1
			-2
			-3
			-4
			-5
			-6
			-7
			-8
			-9
			-10
----------------------------------------------------------------------------------------------------------------------------------------------------------
Q5)  20  19   18   17  16   15---------------range(20,14,-1)
>>> for v in range(20,14,-1):
...		print(v)
...
			20
			19
			18
			17
			16
			15
----------------------------------------------------------------------------------------------------------------------------------------------------------
Q6)  -10  -9  -8  -7  -6  -5  -4  -3  -2  -1----------range(-10,0) OR range(-10,0,1)
>>> for k in range(-10,0):
...		print(k)
...
		-10
		-9
		-8
		-7
		-6
		-5
		-4
		-3
		-2
		-1
>>> for k in range(-10,0,1):
...		print(k)
...
		-10
		-9
		-8
		-7
		-6
		-5
		-4
		-3
		-2
		-1
----------------------------------------------------------------------------------------------------------------------------------------------------------
Q7)  10  12   14   16   18   20-----------range(10,21,2)  OR range(10,22,2)
>>> for v in range(10,21,2):
...		print(v)
...
			10
			12
			14
			16
			18
			20
>>> for v in range(10,22,2):
...		print(v)
...
			10
			12
			14
			16
			18
			20
----------------------------------------------------------------------------------------------------------------------------------------------------------
Q8)  100  110  120  130  140  150----------range(100,151,10)
>>> for v in range(100,151,10):
...		print(v)
...
			100
			110
			120
			130
			140
			150
>>> for v in range(100,160,10):
...		print(v)
...
			100
			110
			120
			130
			140
			150
----------------------------------------------------------------------------------------------------------------------------------------------------------
Q9) 1000  900   800  700  600  500-----------range(1000,499,-100)
>>> for v in range(1000,499,-100):
...		print(v)
...
		1000
		900
		800
		700
		600
		500
>>> for v in range(1000,400,-100):
...		print(v)
...
		1000
		900
		800
		700
		600
		500
----------------------------------------------------------------------------------------------------------------------------------------------------------
Q10)  -100 -120 -140  -160  -180 -200------range(-100,-201,-20)
>>> for v in range(-100,-201,-20):
...		print(v)
...
		-100
		-120
		-140
		-160
		-180
		-200
>>> for v in range(-100,-220,-20):
...		print(v)
...
		-100
		-120
		-140
		-160
		-180
		-200
----------------------------------------------------------------------------------------------------------------------------------------------------------
Q11)  -1000  -900  -800  -700 -600  -500---------range(-1000,-499,100)
>>> for v in range(-1000,-499,100):
...		print(v)
...
		-1000
		-900
		-800
		-700
		-600
		-500
>>> for v in range(-1000,-400,100):
...		print(v)
...
		-1000
		-900
		-800
		-700
		-600
		-500
----------------------------------------------------------------------------------------------------------------------------------------------------------
Q12)  -5  -4   -3  -2  -1   0   1   2  3  4   5-------------range(-5,6,1)  OR  range(-5,6)

>>> for v in range(-5,6,1):
...		print(v)
...
			-5
			-4
			-3
			-2
			-1
			0
			1
			2
			3
			4
			5
>>> for v in range(-5,6):
...     print(v)
...
		-5
		-4
		-3
		-2
		-1
		0
		1
		2
		3
		4
		5
---------------------------------------------------------------------------------------------------
Mul Table for 19 

>>> n=19
>>> for i in range(1,11):
...     print(n,"x",i,"=",n*i)
...
19 x 1 = 19
19 x 2 = 38
19 x 3 = 57
19 x 4 = 76
19 x 5 = 95
19 x 6 = 114
19 x 7 = 133
19 x 8 = 152
19 x 9 = 171
19 x 10 = 190
---------------------------------------------------------------
Mul Table for 6 
>>> n=6
>>> for i in range(1,11):
...     print(n,"x",i,"=",n*i)
...
6 x 1 = 6
6 x 2 = 12
6 x 3 = 18
6 x 4 = 24
6 x 5 = 30
6 x 6 = 36
6 x 7 = 42
6 x 8 = 48
6 x 9 = 54
6 x 10 = 60
----------------------------------------------------------------------------------------------------------------------------------------------------------
>>> r=range(100,1000,200)
>>> r[-1]---------------------------------900

>>> for v in range(50,0,-10)[::-1]:
...		print(v)
...
		10
		20
		30
		40
		50
>>> for v in range(100,201,20)[::-1][::2]:
...		print(v)
...
		200
		160
		120
>>> "PYTHON"[range(10,0,-3)[2]]-----------------'O'
========================================x=============================================



