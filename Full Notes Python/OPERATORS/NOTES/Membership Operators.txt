				================================================
						Membership Operators--Most Imp
				================================================
=>The Purpose of Membership Operators is that "To Check the Existence of Value in Iterable Object".
=>Here Iterable Object contains More than One: 
			Examples: Sequence Types, List Types, Set Types, Dict Type
=>Here Non-Iterable Object contains Only One Value.
			Examples:  Fundamental types and NoneType
=>In Python Programming, we have 2 Types of Membership Operators. They are

				1. in Operator
				2. not in Operator
-------------------------------------------------------------------------------------------------------------------------------------------------------------
1. in Operator
-------------------------------------------------------------------------------------------------------------------------------------------------------------
Syntax:     Value in Iterable-Object
-----------
=>Here 'in' Operator Returns True Provided Value Present in Iterable-Object.
=>Here 'in' Operator Returns False Provided Value not Present in Iterable-Object.
-------------------------------------------------------------------------------------------------------------------------------------------------------------
2. not in Operator
-------------------------------------------------------------------------------------------------------------------------------------------------------------
Syntax:     Value not in Iterable-Object
-----------
=>Here 'not in' Operator Returns True Provided Value Not Present in Iterable-Object.
=>Here 'not in' Operator Returns False Provided Value  Present in Iterable-Object.
-------------------------------------------------------------------------------------------------------------------------------------------------------------
Examples
-------------------------------------------------------------------------------------------------------------------------------------------------------------
>>> s="PYTHON"
>>> "P" in s------------------------True
>>> "p" in s------------------------False
>>> "p" not in s-------------------True
>>> "P" not in s--------------------False
------------------------
>>> s="PYTHON"
>>> "HON" in s------------------True
>>> "PYT" in s--------------------True
>>> "HON" not in s--------------False
>>> "HOn" not in s--------------True
>>> "hon" not in s--------------True
--------------------------
>>> s="PYTHON"
>>> "PTO" in s-----------------False
>>> "PTO" not in s-----------True
>>> "PO" not in s-------------True
>>> "PO" in s------------------False
------------------------------
>>> s="PYTHON"
>>> "NOH" in s--------------------False
>>> "NOH" not in s----------------True
>>> "NOH" in s[::-1]---------------True
>>> "NOH" not in s[::-1]----------False
---------------------------------------------------------------
>>> lst=[10,"Rossum",45.67,True,2+3j]
>>> print(lst)------------------[10, 'Rossum', 45.67, True, (2+3j)]
>>> "Ros" in lst---------------False
>>> "Ros" in lst[1]-----------True
>>> "Ros" not in lst[1][::-1]------------True
>>> "Ros" in lst[1][::-1]----------------False
>>> lst[0] in lst---------------------------True
>>> 2+3j in lst[-1]------------------------TypeError: argument of type 'complex' is not iterable
>>> 2.0 in lst[-1].real-------------------TypeError: argument of type 'float' is not iterable
---------------------------------------------------------------
>>> d1={10:"Python",20:"DSA",30:"C"}
>>> print(d1)-------------------------{10: 'Python', 20: 'DSA', 30: 'C'}
>>> "Python" not in d1-------------True
>>> "Python" not in d1[0]----------KeyError: 0
>>> d1[10]------------------------------'Python'
>>> "Python" not in d1[10]-----------False
>>> "Python" in d1[10]----------------True
>>> 10 in d1------------------------------True
>>> 13 in d1------------------------------False
------------------------
>>> d1={10:"Python",20:"DSA",30:"C"}
>>> "Python" not in d1.values()---------------------False
>>> (10,"Python") in d1--------------------------------False
>>> 10 in d1.keys()--------------------------------------True
>>> 30 not in d1.keys()--------------------------------False
>>> (10,"Python") in d1.items()--------------------True
>>> (10,"Java") in d1.items()-----------------------False
>>> d1[10][::-1] in d1.get(10)-----------------------False
>>> d1[10][::-1] not in d1.get(10)------------------True
>>> d1[10][::-1] in d1.get(10)[::-1]-----------------True
---------------------------------------------------
>>> s="12345"
>>> print(s)---------------------------------12345
>>> 2 in s------------------------------------TypeError: 'in <string>' requires string as left operand, not int
>>> "2" in s--------------------------------True
>>> str(2) in s----------------------------True
>>> str(12) in s---------------------------True
>>> str(543) in s[::-1]-------------------True
>>> str(543) not in s[::-1]--------------False
-------------------------------------------------------------------------------------------------------------------------------------------------------------