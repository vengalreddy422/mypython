				=======================================================
						Identity Operators  (Applicable on Python Command)
				=======================================================
=>The purpose of Identity Operators   is that "To Compare the Memory Address of Two Objects".
=>In Python Programming, we have 2 Type of Identity Operators . They are

				1. is Operator
				2. is not Operator
-----------------------------------------------------------------------------------------------------------------------------------------------------------
1. is Operator
-----------------------------------------------------------------------------------------------------------------------------------------------------------
=>Syntax:   Object1 is Object2
=>Here 'is' Operator returns True Provided the Memory Address of Object1 and Object2 contains Same Address.
=>Here 'is' Operator returns False Provided the Memory Address of Object1 and Object2 contains Different Address.
-----------------------------------------------------------------------------------------------------------------------------------------------------------
2. is not Operator
-----------------------------------------------------------------------------------------------------------------------------------------------------------
=>Syntax:   Object1 is not Object2
=>Here 'is not ' Operator returns True Provided the Memory Address of Object1 and Object2 contains Different 
    Address.
=>Here 'is not' Operator returns False Provided the Memory Address of Object1 and Object2 contains Same Address.
-----------------------------------------------------------------------------------------------------------------------------------------------------------
NOTE1: When Two Objects in Deep Copy then "is" Operator on those Two Objects return True
NOTE2: When Two Objects in Deep Copy then "is not " Operator on those Two Objects return False
NOTE3: When Two Objects in Shallow Copy then "is" Operator on those Two Objects return False
NOTE4: When Two Objects in Shallow Copy then "is not" Operator on those Two Objects return True
-----------------------------------------------------------------------------------------------------------------------------------------------------------
Examnples
-----------------------------------------------------------------------------------------------------------------------------------------------------------
>>> lst1=[10,"RS"]
>>> print(lst1,id(lst1))----------------------[10, 'RS'] 1939769496256
>>> lst2=lst1 # Deep Copy
>>> print(lst2,id(lst2))----------------------[10, 'RS'] 1939769496256
>>> lst1 is lst2------------------------------True
>>> lst1 is not lst2-------------------------False
--------------------
>>> lst3=lst1.copy() # Shallow Copy
>>> print(lst3,id(lst3))------------------------[10, 'RS'] 1939769493312
>>> lst1 is lst3---------------------------------False
>>> lst1 is not lst3---------------------------True
--------------------------------------------------------------------------------------------------------------------------
Misc Examples
--------------------------------------------------------------------------------------------------------------------------
>>> a=None
>>> b=None
>>> print(a,id(a))
None 140730587513328
>>> print(b,id(b))
None 140730587513328
>>> a is b
True
>>> a is not b
False
------------------------------------
>>> d1={10:"Apple",20:"Mango"}
>>> print(d1,id(d1))
{10: 'Apple', 20: 'Mango'} 1939769456768
>>> d2={10:"Apple",20:"Mango"}
>>> print(d2,id(d2))
{10: 'Apple', 20: 'Mango'} 1939769452352
>>> d1 is d2
False
>>> d1 is not d2
True
-------------------------------------------
>>> s1={10,20,30}
>>> s2={10,20,30}
>>> print(s1,id(s1))
{10, 20, 30} 1939768890240
>>> print(s2,id(s2))
{10, 20, 30} 1939768891808
>>> s1 is s2
False
>>> s1 is not s2
True
------------------------------------------
>>> lst1=[10,20,30]
>>> lst2=[10,20,30]
>>> print(lst1,id(lst1))
[10, 20, 30] 1939769513728
>>> print(lst2,id(lst2))
[10, 20, 30] 1939769515136
>>> lst1 is lst2
False
>>> lst1 is not lst2
True
--------------------------------------------
NOTE: If Multiple Object of frozenset, tuple,range,bytearray and bytes contains same data then "is" Operator returns False and "is not" Operator returns True
*************************************************************************************************************************************
NOTE: If Multiple Str Objects Contains "Str Data" with Same Case, Same Meaning and Same order then "is" Operator 
           on multiple str objects returns True and "is not" returns False.
------------------
Examples
------------------
>>> s1="PYTHON"
>>> s2="PYTHON"
>>> print(s1,id(s1))
PYTHON 1939769542048
>>> print(s2,id(s2))
PYTHON 1939769542048
>>> s1 is s2
True
>>> s1 is not  s2
False
>>> s1="INDIA"
>>> s2="INDAI"
>>> print(s1,id(s1))
INDIA 1939769543056
>>> print(s2,id(s2))
INDAI 1939769542720
>>> s1 is s2
False
>>> s1 is not  s2
True
>>> s="WRONG"
>>> t="wrong"
>>> print(s,id(s))
WRONG 1939769542384
>>> print(t,id(t))
wrong 1939769541856
>>> s is t
False
>>> s is not t
True
>>> s1="PYTHON IS AN OOP LANG"
>>> s2="PYTHON IS AN OOP LANG"
>>> s1 is s2--------------------------------False
>>> s1 is not s2---------------------------True
----------------------------------------------------------------------------------------------------------------------------------------------
>>> a=2+3j
>>> b=2+3j
>>> print(a,id(a))
(2+3j) 1939769204720
>>> print(b,id(b))
(2+3j) 1939769204944
>>> a is b
False
>>> a is not b
True
>>> a=True
>>> b=True
>>> print(a,id(a))
True 140730587513264
>>> print(b,id(b))
True 140730587513264
>>> a is b
True
>>> a is not b
False
>>> a=2.3
>>> b=2.3
>>> print(a,id(a))
2.3 1939769199760
>>> print(b,id(b))
2.3 1939769197776
>>> a is b
False
>>> a is not b
True
---------------------------------------------------------------------------------------------------------------------------------------------------------
=>When Multiple Objects contains int values with range of 0 to 256 then "is" operator those int object returns True where "is not" returns False.
------------------
Examples
-------------------
>>> a=300
>>> b=300
>>> print(a,id(a))
300 1939769205104
>>> print(b,id(b))
300 1939769205456
>>> a is b
False
>>> a is not b
True
>>> a=10
>>> b=10
>>> print(a,id(a))
10 140730588398792
>>> print(b,id(b))
10 140730588398792
>>> a=256
>>> b=256
>>> print(a,id(a))
256 140730588406664
>>> print(b,id(b))
256 140730588406664
>>> a is b
True
>>> a is not b
False
>>> a=257
>>> b=257
>>> print(a,id(a))
257 1939769205808
>>> print(b,id(b))
257 1939769206000
>>> a is b
False
>>> a is not b
True
---------------------------------------------------------
=>When Multiple Objects contains int values with range of -1 to -5 then "is" operator those int object returns True where "is not" returns False.
---------------
Examples
----------------
>>> a=-1
>>> b=-1
>>> print(a,id(a))
-1 140730588398440
>>> print(b,id(b))
-1 140730588398440
>>> a is b
True
>>> a is not b
False
>>> a=-5
>>> b=-5
>>> print(a,id(a))
-5 140730588398312
>>> print(b,id(b))
-5 140730588398312
>>> a is b
True
>>> a is not b
False
>>> a=-6
>>> b=-6
>>> print(a,id(a))
-6 1939769205744
>>> print(b,id(b))
-6 1939769206736
>>> a is b
False
>>> a is not b
True
============================================================================================

